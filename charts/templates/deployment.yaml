apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "appname" . }}
  labels:
    app: {{ template "appname" . }}
    helm.sh/chart: {{ template "chartname" . }}
    app.kubernetes.io/name: {{ template "appname" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ .Values.application.component | quote }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ default .Values.global.replicaCount .Values.application.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ template "appname" . }}
      helm.sh/chart: {{ template "chartname" . }}
      app.kubernetes.io/name: {{ template "appname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ template "appname" . }}
        helm.sh/chart: {{ template "chartname" . }}
        app.kubernetes.io/name: {{ template "appname" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: {{ .Values.application.component | quote }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainers }}
      initContainers: 
        {{- range .Values.initContainers }}
        - name: {{ .name }}
          image: "{{ .image.repository }}:{{ .image.tag }}"
          ports:
          {{- toYaml .ports | nindent 12 }}
          env:
          {{- toYaml .env | nindent 12 }}
          volumeMounts:
          {{- toYaml .volumeMounts | nindent 12 }}
        {{- end }}
      {{- end }}         
      containers:
        - name: {{ template "appname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ template "image" . }}:{{ template "tag" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.environment }}
          env: {{ .Values.environment | toYaml | trimSuffix "\n" | nindent 10 }}
          {{- end }}          
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.startupProbe }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}              
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}   
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.volumeMounts }}
          volumeMounts: {{ .Values.volumeMounts | toYaml | trimSuffix "\n" | nindent 10 }}
          {{- end }}

        {{- if .Values.nginxMonitoring.enabled }}
        - name: nginx-exporter
          image: 'nginx/nginx-prometheus-exporter:0.11.0'
          args:
            - '-nginx.scrape-uri=http://localhost:9102/nginx_status'
          ports:
            - containerPort: 9102
        {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.volumes }}
      volumes: {{ .Values.volumes | toYaml | trimSuffix "\n" | nindent 8 }}
      {{- end }}


